package com.busreservation.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import com.busreservation.dto.BusInfo;
import com.busreservation.dto.Customer;
import com.busreservation.exception.CustomerNotFound;
import com.busreservation.exception.SomeThingWentWrong;
import com.busreservation.exception.WrongCredentials;

public class CustomerDaoImpl implements CustomerDao {
    
	static List<Customer> getCustomerData(ResultSet result){
		
		List<Customer> customers = new ArrayList<>();
		
		while(result.next()) {
			
		    Customer customer = new CustomerImpl();
		    
		    customer.setCustomerId(0);
		    customer.setfName(null);
		    customer.setlName(null);
            customer.getMobile();
            
		}
		
		
		return customers;
	}
	
	static boolean isEmptyResult(ResultSet result) throws SQLException {
		
		return !result.isBeforeFirst() && result.getRow()==0? true : false;
	}
	
	@Override
	public boolean customerSignUp(Customer customer) throws SomeThingWentWrong {
		
		Connection connection = null;
		
		try {
			
			connection = DBUtils.createConnection();
			String insert_query = "INSERT into Customer(fName,lName,mobile,email,password) values (?,?,?,?,?)";
			
			PreparedStatement statement = connection.prepareStatement(insert_query);
			
			statement.setString(1,customer.getfName());
			statement.setString(2,customer.getlName());
			statement.setString(3,customer.getMobile());
			statement.setString(4,customer.getEmail());
			statement.setString(5,customer.getPassword());

			int result = statement.executeUpdate();
			
			if(result <= 0) {
			   	throw new SomeThingWentWrong("Signup Fail! Try Again");
			}
			
		} catch (SQLException e) {
			
			e.printStackTrace();
			
		}finally {
			
			try {
				DBUtils.closeConnection(connection);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
		}
		
		return true;
	}

	@Override
	public boolean customerLogin(String email, String password) throws SomeThingWentWrong, WrongCredentials {
		Connection connection = null;
		
		try {
			
			connection = DBUtils.createConnection();
			String insert_query = "Select * from Customer where email = ? and password = ?";
			
			PreparedStatement statement = connection.prepareStatement(insert_query);
			
			statement.setString(1,email);
			statement.setString(2,password);

			int result = statement.executeUpdate();
			
			if(result > 0) {
			   	throw new WrongCredentials("Login Fail! Please Enter Valid Credentials");
			}
			
		} catch (SQLException e) {
			
			e.printStackTrace();
			
		}finally {
			
			try {
				DBUtils.closeConnection(connection);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
		}
		
		return true;
	}


	@Override
	public boolean changeCustomerPassword(int customerID, String newPassword) throws CustomerNotFound, SomeThingWentWrong {
		Connection connection = null;

		try {
			connection = DBUtils.createConnection();
			
			String update_query = "UPDATE customer set password = ? where customerId = ?";
			
			PreparedStatement statement = connection.prepareStatement(update_query);
			
			statement.setString(1,newPassword);
			statement.setInt(2,customerID);
			
            int result	= statement.executeUpdate();
            
            if(result > 0) {
            	
                 System.out.println("Password Changed Successfully");
            	
            }else {
            	
            	throw new SomeThingWentWrong("Bus Not Found");
            	
            }   
			
		} catch (SQLException e) {
			e.printStackTrace();
		}finally {
			
		    try {
				DBUtils.closeConnection(connection);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
		}
	
		return true;
	
	}

	@Override
	public List<Customer> getCustomersInfo() throws CustomerNotFound {
		// TODO Auto-generated method stub
		return null;
	}
     
}
